// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/golibs/clientip (interfaces: HTTPRequestParser)

// Package mock_clientip is a generated GoMock package.
package mock_clientip

import (
	net "net"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHTTPRequestParser is a mock of HTTPRequestParser interface.
type MockHTTPRequestParser struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPRequestParserMockRecorder
}

// MockHTTPRequestParserMockRecorder is the mock recorder for MockHTTPRequestParser.
type MockHTTPRequestParserMockRecorder struct {
	mock *MockHTTPRequestParser
}

// NewMockHTTPRequestParser creates a new mock instance.
func NewMockHTTPRequestParser(ctrl *gomock.Controller) *MockHTTPRequestParser {
	mock := &MockHTTPRequestParser{ctrl: ctrl}
	mock.recorder = &MockHTTPRequestParserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHTTPRequestParser) EXPECT() *MockHTTPRequestParserMockRecorder {
	return m.recorder
}

// ParseHTTPRequest mocks base method.
func (m *MockHTTPRequestParser) ParseHTTPRequest(arg0 *http.Request) net.IP {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseHTTPRequest", arg0)
	ret0, _ := ret[0].(net.IP)
	return ret0
}

// ParseHTTPRequest indicates an expected call of ParseHTTPRequest.
func (mr *MockHTTPRequestParserMockRecorder) ParseHTTPRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseHTTPRequest", reflect.TypeOf((*MockHTTPRequestParser)(nil).ParseHTTPRequest), arg0)
}
