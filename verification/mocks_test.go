// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/golibs/verification (interfaces: MXLookuper)

// Package verification is a generated GoMock package.
package verification

import (
	context "context"
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMXLookuper is a mock of MXLookuper interface.
type MockMXLookuper struct {
	ctrl     *gomock.Controller
	recorder *MockMXLookuperMockRecorder
}

// MockMXLookuperMockRecorder is the mock recorder for MockMXLookuper.
type MockMXLookuperMockRecorder struct {
	mock *MockMXLookuper
}

// NewMockMXLookuper creates a new mock instance.
func NewMockMXLookuper(ctrl *gomock.Controller) *MockMXLookuper {
	mock := &MockMXLookuper{ctrl: ctrl}
	mock.recorder = &MockMXLookuperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMXLookuper) EXPECT() *MockMXLookuperMockRecorder {
	return m.recorder
}

// LookupMX mocks base method.
func (m *MockMXLookuper) LookupMX(arg0 context.Context, arg1 string) ([]*net.MX, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupMX", arg0, arg1)
	ret0, _ := ret[0].([]*net.MX)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupMX indicates an expected call of LookupMX.
func (mr *MockMXLookuperMockRecorder) LookupMX(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupMX", reflect.TypeOf((*MockMXLookuper)(nil).LookupMX), arg0, arg1)
}
